{"version":3,"sources":["components/Header/Header.module.css","components/CurrencyItem/CurrencyItem.module.css","App.module.css","components/CurrencyConverter/CurrencyConverter.module.css","api/currencyRatesAPI.js","components/CurrencyItem/CurrencyItem.jsx","api/transformNumber.js","components/Header/Header.jsx","components/CurrencyConverter/CurrencyConverter.jsx","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchCurrencyRates","a","get","data","push","ccy","buy","sale","Error","currencyRatesAPI","CurrencyItem","item","transformedItem","parseFloat","toFixed","transformNumber","className","s","Header","currencyRates","console","log","header","list","map","currency","CurrencyConverter","useState","firstCurrencyValue","setFirstCurrencyValue","firstCurrencyName","setFirstCurrencyName","secondCurrencyValue","setSecondCurrencyValue","secondCurrencyName","setSecondCurrencyName","flag","setFlag","firstCurrentCurrencyObj","find","secondCurrentCurrencyObj","useEffect","length","secondValue","firstValue","currencyBlock","inputBlock","type","value","onChange","e","currentTarget","size","id","defaultValue","App","currencyRatesArray","setcurrencyRatesArray","savedRatesArray","localStorage","getItem","parsedRatesArray","JSON","parse","then","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26390d93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Header_list__3c8fK\",\"header\":\"Header_header__2LUsW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CurrencyItem_item__3wUp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3jBuM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currencyBlock\":\"CurrencyConverter_currencyBlock__1S6Vu\",\"inputBlock\":\"CurrencyConverter_inputBlock__1m79K\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL =\r\n  'https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5';\r\n\r\nconst fetchCurrencyRates = async () => {\r\n  try {\r\n    const { data } = await axios.get();\r\n\r\n    data.push({ ccy: 'UAH', buy: '1', sale: '1' });\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nconst currencyRatesAPI = {\r\n  fetchCurrencyRates,\r\n};\r\n\r\nexport default currencyRatesAPI;\r\n","import React from 'react';\r\nimport { transformNumber } from '../../api';\r\nimport s from './CurrencyItem.module.css';\r\n\r\nconst CurrencyItem = ({ item }) => {\r\n    const transformedItem = transformNumber(item);\r\n    return <li className={s.item}>{item.ccy} : {transformedItem.buy}/{transformedItem.sale}</li>\r\n}\r\n\r\nexport default CurrencyItem;\r\n\r\n ","export default function transformNumber(item) {\r\n  const buy = parseFloat(item.buy).toFixed(2);\r\n  const sale = parseFloat(item.sale).toFixed(2);\r\n  return { buy, sale };\r\n}\r\n","import React from 'react';\r\nimport CurrencyItem from '../CurrencyItem';\r\nimport s from './Header.module.css';\r\n\r\n\r\nexport default function Header({currencyRates}) {\r\n    console.log('rates', currencyRates);\r\n    return (<>\r\n        <header className={s.header}>\r\n            <ul className={s.list}>\r\n                {currencyRates.map(currency => (\r\n                    <CurrencyItem key={currency.ccy}  item={currency} />\r\n                ))}\r\n            </ul>\r\n        </header>\r\n    </>)\r\n}","import React, {  useState, useEffect } from 'react';\nimport s from './CurrencyConverter.module.css';\n\nexport default function CurrencyConverter({currencyRates}) {\n  const [firstCurrencyValue, setFirstCurrencyValue] = useState(100);\n  const [firstCurrencyName, setFirstCurrencyName] = useState('USD');\n\n  const [secondCurrencyValue, setSecondCurrencyValue] = useState(100);\n  const [secondCurrencyName, setSecondCurrencyName] = useState('UAH');\n\n  const [flag, setFlag] = useState('first');\n\n  const firstCurrentCurrencyObj = currencyRates.find(currency => currency.ccy === firstCurrencyName);\n  const secondCurrentCurrencyObj = currencyRates.find(currency => currency.ccy === secondCurrencyName);\n\n  const exchangeRate = () => (parseFloat(firstCurrentCurrencyObj.buy) / parseFloat(secondCurrentCurrencyObj.sale)).toFixed(4);\n  const reverseExchangeRate = () => (parseFloat(secondCurrentCurrencyObj.sale) / parseFloat(firstCurrentCurrencyObj.buy)).toFixed(4);\n\n  useEffect(() => {\n    if (currencyRates.length !== 0 && flag !== 'second') {\n      console.log('flag', flag);\n      const secondValue = (firstCurrencyValue * parseFloat(firstCurrentCurrencyObj.buy) / parseFloat(secondCurrentCurrencyObj.sale)).toFixed(2);\n      secondValue !== secondCurrencyValue && setSecondCurrencyValue(secondValue);      \n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [firstCurrencyValue, firstCurrencyName, currencyRates]);\n\n  useEffect(() => {\n    if (currencyRates.length !== 0 && flag !== 'first') {\n      console.log('flag', flag);\n      const firstValue = (secondCurrencyValue * parseFloat(secondCurrentCurrencyObj.sale) / parseFloat(firstCurrentCurrencyObj.buy)).toFixed(2);\n      firstValue !== firstCurrencyValue && setFirstCurrencyValue(firstValue);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [secondCurrencyValue, secondCurrencyName, currencyRates]);\n\n  const onChangeFirstValue = (e) => {\n    setFlag('first');\n    setFirstCurrencyValue(e.currentTarget.value);\n  }\n  const onChangeSecondValue = (e) => {\n    setFlag('second');\n    setSecondCurrencyValue(e.currentTarget.value)\n  };\n\n  const onChangeFirstCurrencyName = (e) => {\n    setFlag('first');\n    setFirstCurrencyName(e.currentTarget.value);\n  };\n\n    const onChangeSecondCurrencyName = (e) => {\n    setFlag('second');\n    setSecondCurrencyName(e.currentTarget.value);\n  };\n\n\n\n  return (\n    <>\n      <h1>Currency Converter</h1>\n     { currencyRates.length !== 0 && <section>\n        <div className={s.currencyBlock}>\n          <p>Want to SALE</p>\n          <div className={s.inputBlock}>\n            <input type=\"text\" value={firstCurrencyValue} onChange={onChangeFirstValue} />\n            <select\n              size='1'\n              id=\"firstSelect\"\n              defaultValue={firstCurrencyName}\n              onChange={onChangeFirstCurrencyName}\n            >\n              {currencyRates.map(currency => (\n                <option\n                  key={currency.ccy}\n                  value={currency.ccy}\n                >{currency.ccy}</option>\n              ))}\n            </select>\n          </div>\n          <p>1 {firstCurrencyName} = {exchangeRate()} {secondCurrencyName}</p>\n        </div>\n\n        <div className={s.currencyBlock}>\n          <p>Want to BUY</p>\n          <div className={s.inputBlock}>\n            <input type=\"text\" value={secondCurrencyValue} onChange={onChangeSecondValue} />\n            <select\n              size='1'\n              id=\"secondSelect\"\n              defaultValue={secondCurrencyName}\n              onChange={onChangeSecondCurrencyName}\n            >\n              {currencyRates.map(currency => (\n                <option\n                  key={currency.ccy}\n                  value={currency.ccy}\n                >{currency.ccy}</option>\n              ))}\n            </select>\n          </div>\n          <p>1 {secondCurrencyName} = {reverseExchangeRate()} {firstCurrencyName}</p>\n        </div>\n      </section>}\n    </>\n  )\n};","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport CurrencyConverter from './components/CurrencyConverter';\nimport { currencyRatesAPI } from './api';\nimport s from './App.module.css';\n\nexport const App = () => {\n  const [currencyRatesArray, setcurrencyRatesArray] = useState([]);\n\n  useEffect(() => {\n    if (!currencyRatesArray.length) {\n      const savedRatesArray = localStorage.getItem('currencyRatesArray');\n      const parsedRatesArray = JSON.parse(savedRatesArray);\n\n      if (parsedRatesArray) {\n        setcurrencyRatesArray(parsedRatesArray);\n        return;\n      }\n\n      currencyRatesAPI\n        .fetchCurrencyRates()\n        .then(data => setcurrencyRatesArray(data));\n    }\n  }, [currencyRatesArray]);\n\n  return (\n    <div className={s.App}>\n      {currencyRatesArray && <Header currencyRates={currencyRatesArray} />}\n\n      {currencyRatesArray && (\n        <CurrencyConverter currencyRates={currencyRatesArray} />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n// import { store } from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n// import { Provider } from 'react-redux';\nimport 'react-toastify/dist/ReactToastify.css';\n// import ContextProvider from './contexts/Provider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      {/* <ContextProvider>\n        <Provider store={store}> */}\n      <App />\n      {/* </Provider>\n      </ContextProvider> */}\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}